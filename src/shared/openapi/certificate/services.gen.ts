// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from "@hey-api/client-fetch";
import type {
  GenerateCertificateData,
  GenerateCertificateError,
  GenerateCertificateResponse,
  GetCertificateError,
  GetCertificateResponse,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * Start the generation of the ZK certificate of the authenticated user.
 *
 * This endpoint only works if the user has been verified and KYC is passed.
 * It means the user must be at least tier 1 (proof of identity) in the SwissBorg platform.
 * If the user is still in onboarding, or in recovery, this endpoint will fail with a 4xx error.
 *
 */
export const generateCertificate = <ThrowOnError extends boolean = false>(
  options: Options<GenerateCertificateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    GenerateCertificateResponse,
    GenerateCertificateError,
    ThrowOnError
  >({
    ...options,
    url: "/galactica/cert/generate",
  });
};

/**
 * Get the certificate for the authenticated user, if any.
 *
 */
export const getCertificate = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetCertificateResponse,
    GetCertificateError,
    ThrowOnError
  >({
    ...options,
    url: "/galactica/cert",
  });
};
