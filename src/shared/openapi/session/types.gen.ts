// This file is auto-generated by @hey-api/openapi-ts

export type Approved = {
  code: WebSessionCode;
  session_token: JWT;
};

export type JWT = string;

export type NotFound = {
  code: WebSessionCode;
};

export type Pending = {
  code: WebSessionCode;
  expires_at: string;
};

export type PendingApproval = {
  code: WebSessionCode;
  expires_at: string;
  device_name?: string;
};

/**
 * Represents an error of the SwissBorg Rest API.
 */
export type Problem = {
  /**
   * HTTP response status code.
   */
  status: number;
  /**
   * Error short description.
   */
  title: string;
  detail?: string;
  instance?: string;
};

export type Rejected = {
  code: WebSessionCode;
};

/**
 * Secret value used to initiate and query the status of a Web Session flow.
 */
export type Secret = string;

export type Timeout = {
  code: WebSessionCode;
};

/**
 * Target client to which the WebSession being setup is aimed for. Partners will know this value during integration phase.
 */
export type WebAuthClient = string;

export type WebAuthManagementGetSessionStatusRequestBody = {
  secret: Secret;
};

export type WebAuthManagementGetSessionStatusResponse =
  | {
      approved: Approved;
    }
  | {
      not_found: NotFound;
    }
  | {
      pending: Pending;
    }
  | {
      pending_approval: PendingApproval;
    }
  | {
      rejected: Rejected;
    }
  | {
      timeout: Timeout;
    };

export type WebAuthManagementSetupSessionRequestBody = {
  audience: WebAuthClient;
  secret: Secret;
};

export type WebAuthManagementSetupSessionResponse = {
  code: WebSessionCode;
  expires_at: string;
};

/**
 * Web Session flow identifier.
 */
export type WebSessionCode = string;

export type InitiateWebSessionData = {
  body: WebAuthManagementSetupSessionRequestBody;
};

export type InitiateWebSessionResponse = WebAuthManagementSetupSessionResponse;

export type InitiateWebSessionError = string | Problem;

export type GetWebSessionStatusData = {
  body: WebAuthManagementGetSessionStatusRequestBody;
  path: {
    code: WebSessionCode;
  };
};

export type GetWebSessionStatusResponse =
  WebAuthManagementGetSessionStatusResponse;

export type GetWebSessionStatusError = string | Problem;
